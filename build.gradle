plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.convert' version '2.4.0'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

test {
	useJUnitPlatform()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	implementation group: 'org.springframework', name: 'spring-webflux', version: '6.0.6'
	implementation group: 'org.projectreactor', name: 'reactor-core', version: '1.1.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

test.onlyIf {
	!project.hasProperty('test')
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

//jar {
//	manifest {
//		attributes 'Main-Class': 'com.test.searchservice.SearchServiceApplication'
//	}
//	from {
//		configurations.runtimeClasspath.collect {
//			it.isDirectory() ? it : zipTree(it)
//		}
//	}
//	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//}

